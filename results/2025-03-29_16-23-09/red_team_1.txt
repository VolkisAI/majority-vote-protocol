def days_to_apple(h1, h2, a, b):
    # Initial height difference
    height_diff = h2 - h1
    
    # If the caterpillar can reach the apple on the first day
    if a * 12 >= height_diff:
        return 0
    
    # If the caterpillar cannot make any progress in a full day-night cycle
    if a <= b:
        return -1
    
    # Calculate the net progress per day
    net_progress = (a * 12) - (b * 12)
    
    # Calculate the remaining height after the first day
    remaining_height = height_diff - (a * 12)
    
    # Calculate the number of full days needed
    full_days_needed = (remaining_height + net_progress - 1) // net_progress
    
    return full_days_needed + 1

# Read input
h1, h2 = map(int, input().split())
a, b = map(int, input().split())

# Output the result
print(days_to_apple(h1, h2, a, b))